//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.2032.
// 
unit WebCalc.WebServiceCalc;

interface

uses System.Diagnostics, 
  System.Xml.Serialization, 
  System.Web.Services.Protocols, 
  System.ComponentModel, 
  System.Web.Services, System.Web.Services.Description;

/// <remarks/>
type
  [System.Diagnostics.DebuggerStepThroughAttribute]
  [System.ComponentModel.DesignerCategoryAttribute('code')]
  [System.Web.Services.WebServiceBindingAttribute(Name='TWebService1Soap', Namespace='h' +
  'ttp://tempuri.org/')]
  TWebService1 = class(System.Web.Services.Protocols.SoapHttpClientProtocol)
    /// <remarks/>
  public
    constructor Create;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://tempu' +
    'ri.org/HelloWorld', RequestNamespace='http://tempuri.org/', ResponseNamespace='h' +
    'ttp://tempuri.org/', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function HelloWorld: string;
    /// <remarks/>
    function BeginHelloWorld(callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndHelloWorld(asyncResult: System.IAsyncResult): string;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://tempu' +
    'ri.org/Soma', RequestNamespace='http://tempuri.org/', ResponseNamespace='h' +
    'ttp://tempuri.org/', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function Soma(a: Integer; b: Integer): Integer;
    /// <remarks/>
    function BeginSoma(a: Integer; b: Integer; callback: System.AsyncCallback; 
      asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndSoma(asyncResult: System.IAsyncResult): Integer;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://tempu' +
    'ri.org/Subtracao', RequestNamespace='http://tempuri.org/', ResponseNamespace='h' +
    'ttp://tempuri.org/', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function Subtracao(a: Integer; b: Integer): Integer;
    /// <remarks/>
    function BeginSubtracao(a: Integer; b: Integer; callback: System.AsyncCallback; 
      asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndSubtracao(asyncResult: System.IAsyncResult): Integer;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://tempu' +
    'ri.org/Produto', RequestNamespace='http://tempuri.org/', ResponseNamespace='h' +
    'ttp://tempuri.org/', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function Produto(a: Integer; b: Integer): Integer;
    /// <remarks/>
    function BeginProduto(a: Integer; b: Integer; callback: System.AsyncCallback; 
      asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndProduto(asyncResult: System.IAsyncResult): Integer;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://tempu' +
    'ri.org/Divisao', RequestNamespace='http://tempuri.org/', ResponseNamespace='h' +
    'ttp://tempuri.org/', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function Divisao(a: Integer; b: Integer): Integer;
    /// <remarks/>
    function BeginDivisao(a: Integer; b: Integer; callback: System.AsyncCallback; 
      asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndDivisao(asyncResult: System.IAsyncResult): Integer;
  end;
  
implementation

{$AUTOBOX ON}
{$HINTS OFF}
{$WARNINGS OFF}

/// <remarks/>
constructor TWebService1.Create;
begin
  inherited Create;
  Self.Url := 'http://127.0.0.1:8080/WebServiceApplication1/WebServiceCalc.a' +
  'smx';
end;

/// <remarks/>
function TWebService1.HelloWorld: string;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('HelloWorld', New(TArrayOfSystem_Object, 0));
  Result := (string(results[0]));
end;

/// <remarks/>
function TWebService1.BeginHelloWorld(callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('HelloWorld', New(TArrayOfSystem_Object, 0), callback, 
      asyncState);
end;

/// <remarks/>
function TWebService1.EndHelloWorld(asyncResult: System.IAsyncResult): string;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := (string(results[0]));
end;

/// <remarks/>
function TWebService1.Soma(a: Integer; b: Integer): Integer;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('Soma', TArrayOfSystem_Object.Create(a, b));
  Result := (Integer(results[0]));
end;

/// <remarks/>
function TWebService1.BeginSoma(a: Integer; b: Integer; callback: System.AsyncCallback; 
  asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('Soma', TArrayOfSystem_Object.Create(a, b), callback, 
      asyncState);
end;

/// <remarks/>
function TWebService1.EndSoma(asyncResult: System.IAsyncResult): Integer;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := (Integer(results[0]));
end;

/// <remarks/>
function TWebService1.Subtracao(a: Integer; b: Integer): Integer;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('Subtracao', TArrayOfSystem_Object.Create(a, b));
  Result := (Integer(results[0]));
end;

/// <remarks/>
function TWebService1.BeginSubtracao(a: Integer; b: Integer; callback: System.AsyncCallback; 
  asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('Subtracao', TArrayOfSystem_Object.Create(a, b), 
      callback, asyncState);
end;

/// <remarks/>
function TWebService1.EndSubtracao(asyncResult: System.IAsyncResult): Integer;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := (Integer(results[0]));
end;

/// <remarks/>
function TWebService1.Produto(a: Integer; b: Integer): Integer;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('Produto', TArrayOfSystem_Object.Create(a, b));
  Result := (Integer(results[0]));
end;

/// <remarks/>
function TWebService1.BeginProduto(a: Integer; b: Integer; callback: System.AsyncCallback; 
  asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('Produto', TArrayOfSystem_Object.Create(a, b), callback, 
      asyncState);
end;

/// <remarks/>
function TWebService1.EndProduto(asyncResult: System.IAsyncResult): Integer;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := (Integer(results[0]));
end;

/// <remarks/>
function TWebService1.Divisao(a: Integer; b: Integer): Integer;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('Divisao', TArrayOfSystem_Object.Create(a, b));
  Result := (Integer(results[0]));
end;

/// <remarks/>
function TWebService1.BeginDivisao(a: Integer; b: Integer; callback: System.AsyncCallback; 
  asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('Divisao', TArrayOfSystem_Object.Create(a, b), callback, 
      asyncState);
end;

/// <remarks/>
function TWebService1.EndDivisao(asyncResult: System.IAsyncResult): Integer;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := (Integer(results[0]));
end;

end.
